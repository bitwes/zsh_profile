#!/bin/zsh

# ------------------------------------------------------------------------------
# The following must be setup per platform for this script to work
#
# export GODOT=''
# ------------------------------------------------------------------------------
alias godot='eval $GODOT'
alias godot_here='godot -e --path $PWD' # hijacks the prompt with godot output.
alias gdscript='godot --path $PWD -s '
alias godot_loc="find . -name '*.gd' | xargs wc -l"

# alias adb='/Users/butchwesley/Library/Android/sdk/platform-tools/adb'
func connect_pixel(){
  adb devices
  #adb tcpip 5555 (adb -s FA7B41A00312 tcpip 5555)
  adb connect 192.168.1.115
}


alias pixel_use_tcpip='adb tcpip 5555'
alias disconnect_pixel='adb usb'

function _swith_to_godot_version(){
  app=$1
  export GODOT="/Applications/${app}/Contents/MacOS/Godot"
  godot --version
  echo $GODOT
}


function switch_to_godot_default(){
  switch_to_godot_4
}


function switch_to_godot_3(){
  _swith_to_godot_version "Godot_3.5.2.app"
}


function switch_to_godot_4(){
  _swith_to_godot_version "Godot_4.1.1.app"
}


function switch_to_godot_411(){
  _swith_to_godot_version "Godot_4.1.app"
}

# ------------------------------------------------------------------------------
# Lists all the functions in a gd script file.  It searches from the current
# directory down for any files named $1.  It can optionally filter on a method
# name from $2.
#
# Parameters
# -----------
# $1:  the name of the script
# $2:  (optional) pattern for functions
# ------------------------------------------------------------------------------
function list_functions(){
	local cmd="find ./ -name $1 -exec cat {} \; |  grep -n 'func '"

	if [[ -n $2 ]]; then
		cmd="$cmd | grep $2"
	fi
	eval $cmd
}

# ------------------------------------------------------------------------------
# Lists all the classes in a gd script file.  This searches the same way that
# list_functions does.
#
# Parameters
# -----------
# $1:  the name of the script
# $2:  (optional) pattern for functions
# ------------------------------------------------------------------------------
function list_classes(){
	local cmd="find ./ -name $1 -exec cat {} \; |  grep -n 'class '"

	if [[ -n $2 ]]; then
		cmd="$cmd | grep $2"
	fi
	eval $cmd
}

# ------------------------------------------------------------------------------
# print out accessors for the passed in property.  It also copies them to the
# clipboard.
# ------------------------------------------------------------------------------
function godot_accessor() {
	name=${1#"_"}
	tab=$'\t'

	read -r -d '' OUTPUT  <<EOM
func get_$name():
${tab}return $1

func set_$name($name):
${tab}$1 = $name
EOM
  echo "$OUTPUT"
	echo "$OUTPUT" | pbcopy
}

# ------------------------------------------------------------------------------
# Run Gut.  This only works from the root directory of your game.
#
# Parameters
# ----------
# $1: (optional) specific script name (turns it into a -gselect gut option).
# $2: (optional) a string to filter test names with (turns it
#     into a -gunit_test_name gut option).
# $n: any options after the 2nd are sent to gut as is.  These could be godot
#     or gut options.
#
# If you want to specify options w/o specifying a script or test name you can
# pass '' for $1 and $2.  e.g. gut '' '' "-glog=99"
# ------------------------------------------------------------------------------
function gut(){
  local script=''
  if [[ $1 ]]; then
    script=" -gselect=$1 "
  else
    script=""
  fi

  local t=''
  if [[ $2 ]]; then
    test=" -gunit_test_name=$2"
  else
    test=""
  fi

	local rest_of_args="$3 ${@:3}" # this is a bit of magic that I don't remember
  local options="--debug-collisions --path $PWD -d -s addons/gut/gut_cmdln.gd $script $test $rest_of_args"
	#local options="--path $PWD -s addons/gut/gut_cmdln.gd $script $test $rest_of_args"

	eval "$GODOT $options"
}

alias gut_7_wiki='open ~/development/bitwes.github.io/GutWiki/Godot3/index.html'
alias gut_9_wiki='open ~/development/bitwes.github.io/GutWiki/Godot4/index.html'

# ------------------------
# a bunch of old aliases and exports that I'm not ready to get rid of yet.
# ------------------------
#alias godot='open -n /Applications/Godot.app --args '
#alias gut="godot -path $PWD -d -s test/gut/gut_cmdln.gd -gdir=res://test/unit -gexit -gignore_pause"
#alias comgut="godot -path $PWD -d -s res://bitwes_tools/scripts/gut_cmdln.gd -gutloc=res://bitwes_tools/scripts/gut.gd -gdir=res://poopGame/test/unit,res://poopGame/test/integration -gignore_pause -gexit"
#alias play_game='godot -path /Users/butchwesley/development/godot/comedyTheGame/godotcomedygame/game'
#alias godot='/Applications/Godot.app/Contents/MacOS/Godot'
#alias gut_readme_samples='godot -path $PWD -d -s addons/Gut/gut_cmdln.gd -gignore_pause -gdir=res://test/samples/ -gexit -gselect=test_readme_examples.gd'
#export GODOT_USER='~/.godot/app_userdata'
